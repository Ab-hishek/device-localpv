---
- hosts: localhost
  connection: local
  gather_facts: False

  vars_files:
    - test_vars.yml
    
  tasks:
    - block:
    
         ## Generating the testname for device-localpv provisioner test
       - include_tasks: /e2e-tests/hack/create_testname.yml
    
         ## Record SOT (start of test) in e2e result e2e-cr (e2e-custom-resource)
       - include_tasks: /e2e-tests/hack/update_e2e_result_resource.yml
         vars:
           status: 'SOT'
       
       - name: Create meta partition of device on desired worker nodes
         include_tasks: /e2e-tests/experiments/device-localpv-provisioner/device_partition.yml
         when: "lookup('env','META_PARTITION_CREATION') == 'true'"

       - name: Download device-localpv operator file
         get_url:
           url: https://raw.githubusercontent.com/openebs/device-localpv/{{ device_branch }}/deploy/device-operator.yaml
           dest: ./device_operator.yml
           force: yes
         register: status
         until: "'OK' in status.msg"
         delay: 5
         retries: 3

       - name: Update the namespace where we want to create device driver custom-resources
         shell: >
           sed -i -e "/name: DEVICE_DRIVER_NAMESPACE/{n;s/value: openebs/value: {{ device_operator_ns }}/g}" device_operator.yml &&
           sed -z "s/kind: Namespace\nmetadata:\n  name: openebs/kind: Namespace\nmetadata:\n  name: {{ device_operator_ns }}/" -i device_operator.yml 
         args:
           executable: /bin/bash
         register: update_status
         failed_when: "update_status.rc != 0"
         when: "device_operator_ns != 'openebs'"
 
       - name: Update the openebs device-localpv image tag
         replace:
           path: ./device_operator.yml
           regexp: openebs/device-driver:ci
           replace: "{{ lookup('env','DEVICE_DRIVER_IMAGE') }}"
         when: lookup('env','DEVICE_DRIVER_IMAGE') | length > 0

       - name: Apply the device-localpv operator file
         shell: >
           kubectl apply -f ./device_operator.yml
         args:
           executable: /bin/bash
         
       - name: Verify that the device-controller and node-agent pods are in running state
         shell: >
           kubectl get pods -n kube-system -l role=openebs-device
           --no-headers -o custom-columns=:.status.phase | sort | uniq
         args:
           executable: /bin/bash
         register: device_driver_components
         until: "device_driver_components.stdout == 'Running'"
         delay: 5
         retries: 40

       - block:

          - name: Update storage class template variables with test-specific values
            template:
              src: device_localpv_sc.j2
              dest: device_localpv_sc.yml

          - name: Apply storage class yamls
            shell: >
              kubectl apply -f device_localpv_sc.yml
            args:
              executable: /bin/bash
            register: sc_result
            failed_when: "sc_result.rc != 0"

         when: "{{ lookup('env','STORAGE_CLASS_CREATION') }} == true"

       - set_fact:
           flag: "Pass"

      rescue:
        - name: Setting fail flag
          set_fact:
            flag: "Fail"

      always:
        ## RECORD END-OF-TEST IN e2e RESULT CR
        - include_tasks: /e2e-tests/hack/update_e2e_result_resource.yml
          vars:
            status: 'EOT'